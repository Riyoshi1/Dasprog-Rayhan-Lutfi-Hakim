# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IRedMmt3tptcqJHRZ6dnyxhjd-KrGOw_

A
"""

a, b = map(int, input().split())
print(a + b)

"""B"""

N = int(input())
if N < 1 or N > 5:
    exit()
r_menang = 0
r_kalah = 0
f_menang = 0
f_kalah = 0
seri = 0
for _ in range(N):
    f = list(map(str, input().split()))
    for i in range(1):
        if f[i] == f[i - 1]:
            seri += 1
        elif f[i] == 'Kertas' and f[i - 1] == 'Batu':
            f_menang += 1
            r_kalah += 1
        elif f[i] == 'Batu' and f[i - 1] == 'Kertas':
            r_menang += 1
            f_kalah += 1
        elif f[i] == 'Kertas' and f[i - 1] == 'Gunting':
            r_menang += 1
            f_kalah += 1
        elif f[i] == 'Gunting' and f[i - 1] == 'Kertas':
            f_menang += 1
            r_kalah += 1
        elif f[i] == 'Gunting' and f[i - 1] == 'Batu':
            r_menang += 1
            f_kalah += 1
        elif f[i] == 'Batu' and f[i - 1] == 'Gunting':
            f_menang += 1
            r_kalah += 1

print("Firdaus:{")
print(f"  Menang:{f_menang}")
print(f"  Kalah:{f_kalah}")
print("}")
print("Ryu:{")
print(f"  Menang:{r_menang}")
print(f"  Kalah:{r_kalah}")
print("}")
print(f"Seri={seri}")

"""C"""

d = int(input())
s1, t1, g1 = map(int, input().split())
s2, t2, g2 = map(int, input().split())

s1_hasil = 0 # jarak tempuh Uma1
s2_hasil = 0 # jarak tempuh Uma2
count1 = 0 # jumlah langkah Uma1
count2 = 0 # jumlah langkah Uma2

finish1 = None
finish2 = None

if d == 0 :
    print("seri")
if s1 ==0 and t1 == 0 and g1 ==0 and s2 ==0 and t2 == 0 and g2 ==0:
    print("seri")
else:
    while s1_hasil < d and count1 < 1e7:
        if t1 > 0:
            s1_hasil += s1
            t1 -= 1
        elif g1 > 0:
            s1_hasil += g1
        else:
            break
        count1 += 1
        if s1_hasil >= d:
            finish1 = count1
            break

    while s2_hasil < d and count2 < 1e7:
        if t2 > 0:
            s2_hasil += s2
            t2 -= 1
        elif g2 > 0:
            s2_hasil += g2
        else:
            break
        count2 += 1
        if s2_hasil >= d:
            finish2 = count2
            break

    if finish1 is None and finish2 is None:
        print("seri")  # dua-duanya gagal finis
    elif finish1 is not None and finish2 is None:
        print("1")  # cuma Uma1 yang sampai
    elif finish2 is not None and finish1 is None:
        print("2")  # cuma Uma2 yang sampai
    else: # keduanya finish
        if finish1 < finish2:
            print("1")  # Uma1 lebih cepat
        elif finish2 < finish1:
            print("2")  # Uma2 lebih cepat
        else:
            if s1_hasil > s2_hasil:
                print("1")
            elif s2_hasil > s1_hasil:
                print("2")
            else:
                print("seri")

"""D"""

N, K = map(int, input().split())
koor = []

for i in range(N):
    x, y, f = map(int, input().split())
    koor.append((x, y, f))

px, py = map(int, input().split())

hasil = []  # simpan (jarak, nama) langsung

for x, y, f in koor:
    jarak = ((x - px)**2 + (y - py)**2)**(1/2)

    if f == 60:
        nama = "Mas Ironi"
    elif f == 120:
        nama = "Mas Stecu"
    elif f == 144:
        nama = "Mas Blukutuk"
    elif f == 240:
        nama = "Mas Rusdi"
    elif f == 360:
        nama = "Mas Amba"
    else:
        continue

    hasil.append((jarak, nama))  # simpan jarak duluan

# urutkan otomatis berdasar jarak (karena jarak ada di depan)
hasil.sort()
hasil = hasil[:K]

# hitung setiap nama keluar berapa kali
jumlah = {}
for jarak, nama in hasil:
    jumlah[nama] = jumlah.get(nama, 0) + 1

# cari mayoritas terbanyak
max_jml = max(jumlah.values())

# ambil orang yang punya jumlah terbanyak
Player = [nama for nama, cnt in jumlah.items() if cnt == max_jml]

if len(Player) == 1:
    print(Player[0])  # kalau mayoritas sendirian langsung ambil
else:  # Kalau mayor seri pilih yang jaraknya paling dekat
    min_jarak = float("inf")
    terpilih = None
    for jarak, nama in hasil:
        if nama in Player and jarak < min_jarak:
            min_jarak = jarak
            terpilih = nama
    print(terpilih)